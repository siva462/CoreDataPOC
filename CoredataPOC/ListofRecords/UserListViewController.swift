//
//  UserListViewController.swift
//  CoredataPOC
//
//  Created by Wipro on 12/12/19.
//  Copyright (c) 2019 wipro. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UserListDisplayLogic: class
{
  func displaySomething(viewModel: UserList.Something.ViewModel)
}

class UserListViewController: UIViewController, UserListDisplayLogic
{
  var userListArr: [UserList.Something.ViewModel.DisplayedOrder] = []

  var interactor: UserListBusinessLogic?
  var router: (NSObjectProtocol & UserListRoutingLogic & UserListDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = UserListInteractor()
    let presenter = UserListPresenter()
    let router = UserListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    self.title = "Users List"
  }
    
    override func viewWillAppear(_ animated: Bool) {
        doSomething()
    }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = UserList.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: UserList.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
    
    @IBAction func createUserBtnAction(_ sender: UIBarButtonItem) {
        router?.routeToSomewhere(segue: nil)
    }
}

extension UserListViewController: UITableViewDelegate, UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int
    {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        return userListArr.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "Cell", for: indexPath)
        
        let displayedUser = userListArr[indexPath.row]
        
        cell.textLabel?.text = displayedUser.firstname
        cell.detailTextLabel?.text = displayedUser.email
        
        return cell
    }
}
